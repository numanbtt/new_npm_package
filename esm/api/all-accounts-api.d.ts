/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
import { AllAccountsCommandsRecoverPasswordCommandResult } from '../models';
/**
 * AllAccountsApi - axios parameter creator
 * @export
 */
export declare const AllAccountsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Giriş yapmış hesabın şifresini değiştirmesini sağlar.
     * @param {string} [newPassword]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changePassword: (newPassword?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Sosyal hesaplar ile giriş yapıldığında, kullanıcı browser\'ının dönüş yaptığı url\'dir.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    loginResult: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Misafir kullanıcının unuttuğu şifresini yenileyebilmesini sağlar. Dikkat: Sosyal medya girişlerinde bu metodun çalışmaması gerekir.
     * @param {string} [email]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    lostPassword: (email?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Hesap şifresinin kurtarılmasını sağlar.
     * @param {string} [email]
     * @param {string} [recoverCode]
     * @param {string} [newPassword]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    recoverPassword: (email?: string, recoverCode?: string, newPassword?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AllAccountsApi - functional programming interface
 * @export
 */
export declare const AllAccountsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Giriş yapmış hesabın şifresini değiştirmesini sağlar.
     * @param {string} [newPassword]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changePassword(newPassword?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Sosyal hesaplar ile giriş yapıldığında, kullanıcı browser\'ının dönüş yaptığı url\'dir.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    loginResult(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Misafir kullanıcının unuttuğu şifresini yenileyebilmesini sağlar. Dikkat: Sosyal medya girişlerinde bu metodun çalışmaması gerekir.
     * @param {string} [email]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    lostPassword(email?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Hesap şifresinin kurtarılmasını sağlar.
     * @param {string} [email]
     * @param {string} [recoverCode]
     * @param {string} [newPassword]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    recoverPassword(email?: string, recoverCode?: string, newPassword?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AllAccountsCommandsRecoverPasswordCommandResult>>;
};
/**
 * AllAccountsApi - factory interface
 * @export
 */
export declare const AllAccountsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Giriş yapmış hesabın şifresini değiştirmesini sağlar.
     * @param {string} [newPassword]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changePassword(newPassword?: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary Sosyal hesaplar ile giriş yapıldığında, kullanıcı browser\'ının dönüş yaptığı url\'dir.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    loginResult(options?: any): AxiosPromise<object>;
    /**
     *
     * @summary Misafir kullanıcının unuttuğu şifresini yenileyebilmesini sağlar. Dikkat: Sosyal medya girişlerinde bu metodun çalışmaması gerekir.
     * @param {string} [email]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    lostPassword(email?: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary Hesap şifresinin kurtarılmasını sağlar.
     * @param {string} [email]
     * @param {string} [recoverCode]
     * @param {string} [newPassword]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    recoverPassword(email?: string, recoverCode?: string, newPassword?: string, options?: any): AxiosPromise<AllAccountsCommandsRecoverPasswordCommandResult>;
};
/**
 * AllAccountsApi - interface
 * @export
 * @interface AllAccountsApi
 */
export interface AllAccountsApiInterface {
    /**
     *
     * @summary Giriş yapmış hesabın şifresini değiştirmesini sağlar.
     * @param {string} [newPassword]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AllAccountsApiInterface
     */
    changePassword(newPassword?: string, options?: AxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Sosyal hesaplar ile giriş yapıldığında, kullanıcı browser\'ının dönüş yaptığı url\'dir.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AllAccountsApiInterface
     */
    loginResult(options?: AxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Misafir kullanıcının unuttuğu şifresini yenileyebilmesini sağlar. Dikkat: Sosyal medya girişlerinde bu metodun çalışmaması gerekir.
     * @param {string} [email]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AllAccountsApiInterface
     */
    lostPassword(email?: string, options?: AxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Hesap şifresinin kurtarılmasını sağlar.
     * @param {string} [email]
     * @param {string} [recoverCode]
     * @param {string} [newPassword]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AllAccountsApiInterface
     */
    recoverPassword(email?: string, recoverCode?: string, newPassword?: string, options?: AxiosRequestConfig): AxiosPromise<AllAccountsCommandsRecoverPasswordCommandResult>;
}
/**
 * AllAccountsApi - object-oriented interface
 * @export
 * @class AllAccountsApi
 * @extends {BaseAPI}
 */
export declare class AllAccountsApi extends BaseAPI implements AllAccountsApiInterface {
    /**
     *
     * @summary Giriş yapmış hesabın şifresini değiştirmesini sağlar.
     * @param {string} [newPassword]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AllAccountsApi
     */
    changePassword(newPassword?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary Sosyal hesaplar ile giriş yapıldığında, kullanıcı browser\'ının dönüş yaptığı url\'dir.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AllAccountsApi
     */
    loginResult(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary Misafir kullanıcının unuttuğu şifresini yenileyebilmesini sağlar. Dikkat: Sosyal medya girişlerinde bu metodun çalışmaması gerekir.
     * @param {string} [email]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AllAccountsApi
     */
    lostPassword(email?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary Hesap şifresinin kurtarılmasını sağlar.
     * @param {string} [email]
     * @param {string} [recoverCode]
     * @param {string} [newPassword]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AllAccountsApi
     */
    recoverPassword(email?: string, recoverCode?: string, newPassword?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AllAccountsCommandsRecoverPasswordCommandResult, any>>;
}
