/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from '../base';
/**
 * AppInfoAdministrationApi - axios parameter creator
 * @export
 */
export declare const AppInfoAdministrationApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Uygulamanın şu anki android versiyonunu değiştirir
     * @param {string} [currentAndroidVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeAppCurrentAndroidVersion: (currentAndroidVersion?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Uygulamanın şu anki ios versiyonunu değiştirir
     * @param {string} [currentIOSVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeAppCurrentIOSVersion: (currentIOSVersion?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Uygulamanın bakım durumunu değiştirmeyi sağlar
     * @param {boolean} [maintenanceStatus]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeAppMaintenanceStatus: (maintenanceStatus?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Uygulamanın minimum android versiyonunu değiştirir
     * @param {string} [minimumAndroidVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeAppMinimumAndroidVersion: (minimumAndroidVersion?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Uygulamanın minimum ios versiyonunu değiştirir
     * @param {string} [minimumIOSVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeAppMinimumIOSVersion: (minimumIOSVersion?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AppInfoAdministrationApi - functional programming interface
 * @export
 */
export declare const AppInfoAdministrationApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Uygulamanın şu anki android versiyonunu değiştirir
     * @param {string} [currentAndroidVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeAppCurrentAndroidVersion(currentAndroidVersion?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Uygulamanın şu anki ios versiyonunu değiştirir
     * @param {string} [currentIOSVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeAppCurrentIOSVersion(currentIOSVersion?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Uygulamanın bakım durumunu değiştirmeyi sağlar
     * @param {boolean} [maintenanceStatus]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeAppMaintenanceStatus(maintenanceStatus?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Uygulamanın minimum android versiyonunu değiştirir
     * @param {string} [minimumAndroidVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeAppMinimumAndroidVersion(minimumAndroidVersion?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Uygulamanın minimum ios versiyonunu değiştirir
     * @param {string} [minimumIOSVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeAppMinimumIOSVersion(minimumIOSVersion?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * AppInfoAdministrationApi - factory interface
 * @export
 */
export declare const AppInfoAdministrationApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Uygulamanın şu anki android versiyonunu değiştirir
     * @param {string} [currentAndroidVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeAppCurrentAndroidVersion(currentAndroidVersion?: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary Uygulamanın şu anki ios versiyonunu değiştirir
     * @param {string} [currentIOSVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeAppCurrentIOSVersion(currentIOSVersion?: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary Uygulamanın bakım durumunu değiştirmeyi sağlar
     * @param {boolean} [maintenanceStatus]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeAppMaintenanceStatus(maintenanceStatus?: boolean, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary Uygulamanın minimum android versiyonunu değiştirir
     * @param {string} [minimumAndroidVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeAppMinimumAndroidVersion(minimumAndroidVersion?: string, options?: any): AxiosPromise<object>;
    /**
     *
     * @summary Uygulamanın minimum ios versiyonunu değiştirir
     * @param {string} [minimumIOSVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    changeAppMinimumIOSVersion(minimumIOSVersion?: string, options?: any): AxiosPromise<object>;
};
/**
 * AppInfoAdministrationApi - interface
 * @export
 * @interface AppInfoAdministrationApi
 */
export interface AppInfoAdministrationApiInterface {
    /**
     *
     * @summary Uygulamanın şu anki android versiyonunu değiştirir
     * @param {string} [currentAndroidVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppInfoAdministrationApiInterface
     */
    changeAppCurrentAndroidVersion(currentAndroidVersion?: string, options?: AxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Uygulamanın şu anki ios versiyonunu değiştirir
     * @param {string} [currentIOSVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppInfoAdministrationApiInterface
     */
    changeAppCurrentIOSVersion(currentIOSVersion?: string, options?: AxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Uygulamanın bakım durumunu değiştirmeyi sağlar
     * @param {boolean} [maintenanceStatus]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppInfoAdministrationApiInterface
     */
    changeAppMaintenanceStatus(maintenanceStatus?: boolean, options?: AxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Uygulamanın minimum android versiyonunu değiştirir
     * @param {string} [minimumAndroidVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppInfoAdministrationApiInterface
     */
    changeAppMinimumAndroidVersion(minimumAndroidVersion?: string, options?: AxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Uygulamanın minimum ios versiyonunu değiştirir
     * @param {string} [minimumIOSVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppInfoAdministrationApiInterface
     */
    changeAppMinimumIOSVersion(minimumIOSVersion?: string, options?: AxiosRequestConfig): AxiosPromise<object>;
}
/**
 * AppInfoAdministrationApi - object-oriented interface
 * @export
 * @class AppInfoAdministrationApi
 * @extends {BaseAPI}
 */
export declare class AppInfoAdministrationApi extends BaseAPI implements AppInfoAdministrationApiInterface {
    /**
     *
     * @summary Uygulamanın şu anki android versiyonunu değiştirir
     * @param {string} [currentAndroidVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppInfoAdministrationApi
     */
    changeAppCurrentAndroidVersion(currentAndroidVersion?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary Uygulamanın şu anki ios versiyonunu değiştirir
     * @param {string} [currentIOSVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppInfoAdministrationApi
     */
    changeAppCurrentIOSVersion(currentIOSVersion?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary Uygulamanın bakım durumunu değiştirmeyi sağlar
     * @param {boolean} [maintenanceStatus]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppInfoAdministrationApi
     */
    changeAppMaintenanceStatus(maintenanceStatus?: boolean, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary Uygulamanın minimum android versiyonunu değiştirir
     * @param {string} [minimumAndroidVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppInfoAdministrationApi
     */
    changeAppMinimumAndroidVersion(minimumAndroidVersion?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary Uygulamanın minimum ios versiyonunu değiştirir
     * @param {string} [minimumIOSVersion]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AppInfoAdministrationApi
     */
    changeAppMinimumIOSVersion(minimumIOSVersion?: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
}
